/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        Normal {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none             &kp Q  &kp W  &kp F  &kp P  &kp B        &kp J           &kp L  &kp U      &kp Y    &kp P    &to 7
&to 6             &kp A  &kp R  &kp S  &kp T  &kp G        &kp M           &kp N  &kp E      &kp I    &kp O    &none
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C  &kp D  &kp V        &kp K           &kp H  &kp COMMA  &kp DOT  &kp SQT  &none
                                &none  &mo 2  &kp SPACE    &kp LEFT_SHIFT  &mo 1  &mo 5
            >;
        };

        Symbols {
            bindings = <
&none   &kp LS(AT)     &kp LS(AT)    &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)    &kp GRAVE      &kp EQUAL     &kp LS(COLON)  &kp SEMI  &none       &none
&trans  &kp LS(UNDER)  &kp SQT       &kp LS(DQT)    &kp MINUS     &kp LS(CARET)    &kp LS(QMARK)  &kp LS(LPAR)  &kp LS(LBRC)   &kp LBKT  &kp LS(LT)  &none
&none   &kp LS(TILDE)  &kp LS(EXCL)  &kp FSLH       &kp BSLH      &kp LS(AMPS)     &kp LS(STAR)   &kp LS(RPAR)  &kp LS(RBRC)   &kp RBKT  &kp LS(GT)  &none
                                     &none          &mo 3         &none            &none          &none         &trans
            >;
        };

        System {
            bindings = <
&none   &none         &kp ESC       &none      &none      &none    &none            &kp HOME  &kp END  &kp DEL    &none  &none
&trans  &kp LEFT_ALT  &kp LEFT_WIN  &kp LCTRL  &kp LSHFT  &none    &kp LEFT         &kp DOWN  &kp UP   &kp RIGHT  &none  &none
&none   &none         &kp LC(X)     &kp LC(C)  &kp LC(V)  &none    &kp PRINTSCREEN  &kp TAB   &kp RET  &kp BSPC   &none  &none
                                    &none      &none      &none    &none            &mo 4     &trans
            >;
        };

        Numbers {
            bindings = <
&none   &none  &kp LS(PIPE)   &kp LS(TILDE)  &kp GRAVE     &none    &kp GRAVE     &kp N7  &kp N8  &kp N9  &none   &none
&trans  &none  &kp DOT        &kp N0         &kp LS(PLUS)  &none    &kp FSLH      &kp N4  &kp N5  &kp N6  &kp N0  &none
&none   &none  &kp LS(UNDER)  &kp EQUAL      &kp MINUS     &none    &kp LS(STAR)  &kp N1  &kp N2  &kp N3  &none   &none
                              &none          &none         &none    &none         &none   &trans
            >;
        };

        Function {
            bindings = <
&none   &none  &kp F7  &kp F8  &kp F9  &kp F12    &none  &none  &none   &none  &none  &none
&trans  &none  &kp F4  &kp F5  &kp F6  &kp F11    &none  &none  &none   &none  &none  &none
&none   &none  &kp F1  &kp F2  &kp F3  &kp F10    &none  &none  &none   &none  &none  &none
                       &none   &none   &none      &none  &none  &trans
            >;
        };

        Global {
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &none       &none              &none            &none  &none
&none  &none  &none  &none  &none  &none    &none  &kp C_PREV  &kp C_PLAY_PAUSE   &kp C_NEXT       &none  &none
&none  &none  &none  &none  &none  &none    &none  &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &none  &none
                     &none  &none  &none    &none  &none       &none
            >;
        };

        Portal {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        Board {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        Game {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        GameShift {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "Game Shift";
        };

        GameNumber {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "Game Numbers";
        };

        GameFunction {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "Game Function";
        };
    };
};
